name: ci
on:
  push:
    branches:
      - "**"

defaults:
  run:
    shell: bash --noprofile --norc -euo pipefail {0}

concurrency: ci-${{ github.ref }}-${{ github.workflow }}

jobs:
  build-and-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - uses: actions/setup-java@f4f1212c880fdec8162ea9a6493f4495191887b4
        with:
          distribution: "zulu"
          java-version: "17.0.10"
          java-package: "jdk"

      - uses: capralifecycle/actions-lib/check-runtime-dependencies@292f4f4f631b1cb0113e104a1f1d5e2c0cced6b4

      - name: cache mvn
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: release preparation
        id: prep
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          major_version="$(sed -n "s/^.*<major-version>\([0-9]\{1,\}\)<\/major-version>.*$/\1/p" pom.xml)"
          echo "$major_version" | grep -q "^[0-9]\{1,\}$" || {
            echo "ERROR: Failed to extract <major-version> from pom.xml"
            exit 1
          }
          echo "major-version=$major_version" >> "$GITHUB_OUTPUT"

      - uses: capralifecycle/actions-lib/generate-tag@292f4f4f631b1cb0113e104a1f1d5e2c0cced6b4
        id: tag
        with:
          tag-prefix: "${{ steps.prep.outputs.major-version }}"
          tag-type: "punctuated-timestamp-tag"

      - name: resolve dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B dependency:resolve

      - name: conditional release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONDITIONAL_RELEASE: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          TAG: "${{ steps.tag.outputs.tag }}"

        run: |
          if [ "$CONDITIONAL_RELEASE" = "true" ]; then
            echo "Releasing library with tag '$TAG'"
            mvn -B source:jar deploy \
              -DaltReleaseDeploymentRepository="github::https://maven.pkg.github.com/capralifecycle/liflig-kotlin-parent" \
              scm:tag -Drevision="$TAG" -Dtag="$TAG" \
              org.apache.maven.plugins:maven-enforcer-plugin:3.5.0:enforce -Denforcer.rules=requireReleaseDeps
          else
            mvn -B -U verify
          fi

      - uses: capralifecycle/actions-lib/slack-notify@292f4f4f631b1cb0113e104a1f1d5e2c0cced6b4
        # NOTE: We only want to be notified about failures on the default branch
        if: ${{ failure() && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
        with:
          bot-token: ${{ secrets.SHARED_SLACK_BOT_TOKEN }}
          channel: "#cals-dev-info"
